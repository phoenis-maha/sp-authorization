/*
Selling Partner API for Authorization

The Selling Partner API for Authorization helps developers manage authorizations and check the specific permissions associated with a given authorization.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAuthorizationCodeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAuthorizationCodeResponse{}

// GetAuthorizationCodeResponse The response schema for the GetAuthorizationCode operation.
type GetAuthorizationCodeResponse struct {
	Payload *AuthorizationCode `json:"payload,omitempty"`
	// A list of error responses returned when a request is unsuccessful.
	Errors []Error `json:"errors,omitempty"`
}

// NewGetAuthorizationCodeResponse instantiates a new GetAuthorizationCodeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAuthorizationCodeResponse() *GetAuthorizationCodeResponse {
	this := GetAuthorizationCodeResponse{}
	return &this
}

// NewGetAuthorizationCodeResponseWithDefaults instantiates a new GetAuthorizationCodeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAuthorizationCodeResponseWithDefaults() *GetAuthorizationCodeResponse {
	this := GetAuthorizationCodeResponse{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *GetAuthorizationCodeResponse) GetPayload() AuthorizationCode {
	if o == nil || IsNil(o.Payload) {
		var ret AuthorizationCode
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthorizationCodeResponse) GetPayloadOk() (*AuthorizationCode, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *GetAuthorizationCodeResponse) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given AuthorizationCode and assigns it to the Payload field.
func (o *GetAuthorizationCodeResponse) SetPayload(v AuthorizationCode) {
	o.Payload = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GetAuthorizationCodeResponse) GetErrors() []Error {
	if o == nil || IsNil(o.Errors) {
		var ret []Error
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthorizationCodeResponse) GetErrorsOk() ([]Error, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GetAuthorizationCodeResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error and assigns it to the Errors field.
func (o *GetAuthorizationCodeResponse) SetErrors(v []Error) {
	o.Errors = v
}

func (o GetAuthorizationCodeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAuthorizationCodeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableGetAuthorizationCodeResponse struct {
	value *GetAuthorizationCodeResponse
	isSet bool
}

func (v NullableGetAuthorizationCodeResponse) Get() *GetAuthorizationCodeResponse {
	return v.value
}

func (v *NullableGetAuthorizationCodeResponse) Set(val *GetAuthorizationCodeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAuthorizationCodeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAuthorizationCodeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAuthorizationCodeResponse(val *GetAuthorizationCodeResponse) *NullableGetAuthorizationCodeResponse {
	return &NullableGetAuthorizationCodeResponse{value: val, isSet: true}
}

func (v NullableGetAuthorizationCodeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAuthorizationCodeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


